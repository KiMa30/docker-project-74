version: '3.8'  # Версия Docker Compose

services:
  app:  # Название сервиса
    build:
    # Контекст для сборки образа,
    # в данном случае, текущая директория
      context: .
    # Имя Docker-файла из которого будет собран образ
      dockerfile: Dockerfile
    # Зависимость app от DB
    depends_on:
      - db
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    image: kima30/docker-project-74:latest # Для использования из Docker Hub
    volumes:
    - ./app:/app # Монтируем локальную директорию app в контейнер
    - /app/node_modules
    # ports:
    #  - "8080:8080"  # Пробрасываем порты

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432" # проброс портов базы наружу, можно подключиться через UI (DBeaver)
    volumes:
      - postgres_data:/var/lib/postgresql/data # позволяет сохранять данные после остановки контейнера
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5  

  caddy:
    image: caddy:latest
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./services/caddy:/etc/caddy
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - app

volumes:
  postgres_data: {}
  caddy_data:
  caddy_config:  